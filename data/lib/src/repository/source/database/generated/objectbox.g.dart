// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../../../../../src/repository/source/database/model/local_image_url_data.dart';
import '../../../../../src/repository/source/database/model/local_user_data.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4969928658474633047),
      name: 'LocalImageUrlData',
      lastPropertyId: const obx_int.IdUid(5, 331570775082919118),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 422305745864574934),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4173598184336594378),
            name: 'origin',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6736465162135449940),
            name: 'sm',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1793834910082378172),
            name: 'md',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 331570775082919118),
            name: 'lg',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3616158557773932118),
      name: 'LocalUserData',
      lastPropertyId: const obx_int.IdUid(6, 4698674987125156563),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1508326700623987592),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1208531693273940929),
            name: 'avatarId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 4801478670005000227),
            relationTarget: 'LocalImageUrlData'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7825654431576852287),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7222186721110839801),
            name: 'money',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4211253740468871819),
            name: 'gender',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4698674987125156563),
            name: 'birthday',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 8239437420147128419),
            name: 'photos',
            targetId: const obx_int.IdUid(1, 4969928658474633047))
      ],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 3616158557773932118),
      lastIndexId: const obx_int.IdUid(1, 4801478670005000227),
      lastRelationId: const obx_int.IdUid(1, 8239437420147128419),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    LocalImageUrlData: obx_int.EntityDefinition<LocalImageUrlData>(
        model: _entities[0],
        toOneRelations: (LocalImageUrlData object) => [],
        toManyRelations: (LocalImageUrlData object) => {},
        getId: (LocalImageUrlData object) => object.id,
        setId: (LocalImageUrlData object, int id) {
          object.id = id;
        },
        objectToFB: (LocalImageUrlData object, fb.Builder fbb) {
          final originOffset =
              object.origin == null ? null : fbb.writeString(object.origin!);
          final smOffset =
              object.sm == null ? null : fbb.writeString(object.sm!);
          final mdOffset =
              object.md == null ? null : fbb.writeString(object.md!);
          final lgOffset =
              object.lg == null ? null : fbb.writeString(object.lg!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, originOffset);
          fbb.addOffset(2, smOffset);
          fbb.addOffset(3, mdOffset);
          fbb.addOffset(4, lgOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final originParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final smParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final mdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final lgParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final object = LocalImageUrlData(
              origin: originParam, sm: smParam, md: mdParam, lg: lgParam)
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);

          return object;
        }),
    LocalUserData: obx_int.EntityDefinition<LocalUserData>(
        model: _entities[1],
        toOneRelations: (LocalUserData object) => [object.avatar],
        toManyRelations: (LocalUserData object) => {
              obx_int.RelInfo<LocalUserData>.toMany(1, object.id!):
                  object.photos
            },
        getId: (LocalUserData object) => object.id,
        setId: (LocalUserData object, int id) {
          object.id = id;
        },
        objectToFB: (LocalUserData object, fb.Builder fbb) {
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final moneyOffset =
              object.money == null ? null : fbb.writeString(object.money!);
          fbb.startTable(7);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addInt64(1, object.avatar.targetId);
          fbb.addOffset(2, emailOffset);
          fbb.addOffset(3, moneyOffset);
          fbb.addInt64(4, object.gender);
          fbb.addInt64(5, object.birthday);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final moneyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final genderParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final birthdayParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final object = LocalUserData(
              email: emailParam,
              money: moneyParam,
              gender: genderParam,
              birthday: birthdayParam)
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          object.avatar.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          object.avatar.attach(store);
          obx_int.InternalToManyAccess.setRelInfo<LocalUserData>(object.photos,
              store, obx_int.RelInfo<LocalUserData>.toMany(1, object.id!));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [LocalImageUrlData] entity fields to define ObjectBox queries.
class LocalImageUrlData_ {
  /// see [LocalImageUrlData.id]
  static final id =
      obx.QueryIntegerProperty<LocalImageUrlData>(_entities[0].properties[0]);

  /// see [LocalImageUrlData.origin]
  static final origin =
      obx.QueryStringProperty<LocalImageUrlData>(_entities[0].properties[1]);

  /// see [LocalImageUrlData.sm]
  static final sm =
      obx.QueryStringProperty<LocalImageUrlData>(_entities[0].properties[2]);

  /// see [LocalImageUrlData.md]
  static final md =
      obx.QueryStringProperty<LocalImageUrlData>(_entities[0].properties[3]);

  /// see [LocalImageUrlData.lg]
  static final lg =
      obx.QueryStringProperty<LocalImageUrlData>(_entities[0].properties[4]);
}

/// [LocalUserData] entity fields to define ObjectBox queries.
class LocalUserData_ {
  /// see [LocalUserData.id]
  static final id =
      obx.QueryIntegerProperty<LocalUserData>(_entities[1].properties[0]);

  /// see [LocalUserData.avatar]
  static final avatar =
      obx.QueryRelationToOne<LocalUserData, LocalImageUrlData>(
          _entities[1].properties[1]);

  /// see [LocalUserData.email]
  static final email =
      obx.QueryStringProperty<LocalUserData>(_entities[1].properties[2]);

  /// see [LocalUserData.money]
  static final money =
      obx.QueryStringProperty<LocalUserData>(_entities[1].properties[3]);

  /// see [LocalUserData.gender]
  static final gender =
      obx.QueryIntegerProperty<LocalUserData>(_entities[1].properties[4]);

  /// see [LocalUserData.birthday]
  static final birthday =
      obx.QueryIntegerProperty<LocalUserData>(_entities[1].properties[5]);

  /// see [LocalUserData.photos]
  static final photos =
      obx.QueryRelationToMany<LocalUserData, LocalImageUrlData>(
          _entities[1].relations[0]);
}
